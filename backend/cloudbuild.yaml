# Google Cloud Build configuration for AI Slop Detection Backend
# 
# This configuration builds and deploys the FastAPI backend for AI-generated 
# content detection to Google Cloud Run.
#
# Prerequisites:
# - Enable Cloud Build, Cloud Run, and Container Registry APIs
# - Set up Cloud SQL instance (PostgreSQL) for database
# - Create GCS bucket for media storage
# - Generate Gemini API key
# - Store GCS service account key in Secret Manager as 'gcs-service-account-key'
# - Grant Cloud Build service account access to Secret Manager
#
# Usage:
# gcloud builds submit --config cloudbuild.yaml \
#   --substitutions _GEMINI_API_KEY="your-api-key",_GCS_BUCKET_NAME="your-bucket",_DB_USER="appuser",_DB_PASSWORD="password",_DB_HOST="/cloudsql/PROJECT:REGION:INSTANCE"
#
# For development deployment:
# gcloud builds submit --config cloudbuild.yaml \
#   --substitutions _DEBUG="true",_MEMORY="4Gi",_CPU="2",_GEMINI_API_KEY="key",_GCS_BUCKET_NAME="bucket",_DB_USER="user",_DB_PASSWORD="pass",_DB_HOST="host"
#
# Required substitution variables:
# - _GEMINI_API_KEY: Google Gemini API key for chat functionality
# - _GCS_BUCKET_NAME: Google Cloud Storage bucket name for media storage  
# - _DB_USER: Database username
# - _DB_PASSWORD: Database password
# - _DB_HOST: Database host (use /cloudsql/PROJECT:REGION:INSTANCE for Cloud SQL)

steps:
  # Setup GCS credentials from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "$$GCS_SERVICE_ACCOUNT_KEY" > /workspace/gcs-key.json
      echo "GCS credentials written to /workspace/gcs-key.json"
    secretEnv: ['GCS_SERVICE_ACCOUNT_KEY']
    id: 'setup-gcs-credentials'

  # Copy credentials to backend directory for Docker build
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      cp /workspace/gcs-key.json ./backend/gcs-key.json
      echo "GCS credentials copied to backend directory"
    id: 'copy-credentials'
    waitFor: ['setup-gcs-credentials']

  # Build backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/ai-slop-backend:$COMMIT_SHA', './backend' ]
    id: 'build-backend'
    waitFor: ['copy-credentials']

  # Push backend image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/ai-slop-backend:$COMMIT_SHA' ]
    id: 'push-backend'
    waitFor: [ 'build-backend' ]

  # Clean up credentials from workspace
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      rm -f /workspace/gcs-key.json ./backend/gcs-key.json
      echo "Credentials cleaned up from workspace"
    id: 'cleanup-credentials'
    waitFor: ['push-backend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'ai-slop-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/ai-slop-backend:$COMMIT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8000'
      - '--set-env-vars'
      - 'DEBUG=${_DEBUG},DEVICE=${_DEVICE},DEFAULT_MODEL=${_DEFAULT_MODEL},LOG_LEVEL=${_LOG_LEVEL},GEMINI_API_KEY=${_GEMINI_API_KEY},GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},GCS_PROJECT_ID=$PROJECT_ID,GCS_CREDENTIALS_PATH=/app/gcs-key.json,DB_NAME=${_DB_NAME},DB_USER=${_DB_USER},DB_PASSWORD=${_DB_PASSWORD},DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT}'
      - '--memory'
      - '$_MEMORY'
      - '--cpu'
      - '$_CPU'
      - '--max-instances'
      - '$_MAX_INSTANCES'
      - '--min-instances'
      - '$_MIN_INSTANCES'
      - '--timeout'
      - '$_TIMEOUT'
    id: 'deploy-backend'
    waitFor: [ 'cleanup-credentials' ]

# Set timeout for the entire build
timeout: 3600s

# Available secrets from Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/colombo-hci-lab/secrets/gcs-service-account-key/versions/latest
    env: 'GCS_SERVICE_ACCOUNT_KEY'

# Configure build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_MEDIUM

# Substitution variables with defaults
substitutions:
  _REGION: 'us-central1'
  _DEBUG: 'false'
  _DEVICE: 'cpu'
  _DEFAULT_MODEL: 'slowfast_r50'
  _LOG_LEVEL: 'INFO'
  _MEMORY: '4Gi'
  _CPU: '2'
  _MAX_INSTANCES: '1'
  _MIN_INSTANCES: '0'
  _TIMEOUT: '900s'
  # Required environment variables (must be provided during build)
  _GEMINI_API_KEY: ''   # Set via gcloud builds submit --substitutions
  _GCS_BUCKET_NAME: ''  # Set via gcloud builds submit --substitutions
  # Database connection components
  _DB_NAME: 'ai_slop_extension'  # Database name
  _DB_USER: ''          # Database user (set via substitutions)
  _DB_PASSWORD: ''      # Database password (set via substitutions) 
  _DB_HOST: ''          # Database host (set via substitutions)
  _DB_PORT: '5432'      # Database port
